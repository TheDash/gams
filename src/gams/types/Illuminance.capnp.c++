// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Illuminance.capnp

#include "Illuminance.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<67> b_edc8ce37b3c3981f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     31, 152, 195, 179,  55, 206, 200, 237,
     33,   0,   0,   0,   1,   0,   2,   0,
    246, 240,  30,  69, 131, 133, 221, 238,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 103,  97, 109, 115,
     47, 116, 121, 112, 101, 115,  47,  73,
    108, 108, 117, 109, 105, 110,  97, 110,
     99, 101,  46,  99,  97, 112, 110, 112,
     58,  73, 108, 108, 117, 109, 105, 110,
     97, 110,  99, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    105, 108, 108, 117, 109, 105, 110,  97,
    110,  99, 101,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     19, 153, 130, 198, 110,  82, 149, 204,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 114, 105,  97, 110,  99, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_edc8ce37b3c3981f = b_edc8ce37b3c3981f.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_edc8ce37b3c3981f[] = {
  &s_cc95526ec6829913,
};
static const uint16_t m_edc8ce37b3c3981f[] = {1, 0, 2};
static const uint16_t i_edc8ce37b3c3981f[] = {0, 1, 2};
const ::capnp::_::RawSchema s_edc8ce37b3c3981f = {
  0xedc8ce37b3c3981f, b_edc8ce37b3c3981f.words, 67, d_edc8ce37b3c3981f, m_edc8ce37b3c3981f,
  1, 3, i_edc8ce37b3c3981f, nullptr, nullptr, { &s_edc8ce37b3c3981f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// Illuminance
constexpr uint16_t Illuminance::_capnpPrivate::dataWordSize;
constexpr uint16_t Illuminance::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Illuminance::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Illuminance::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

