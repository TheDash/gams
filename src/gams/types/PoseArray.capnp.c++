// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: PoseArray.capnp

#include "PoseArray.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<54> b_af8f32e2f176ffd0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    208, 255, 118, 241, 226,  50, 143, 175,
     31,   0,   0,   0,   1,   0,   0,   0,
     47, 235, 203, 130,  83, 175,   7, 205,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 103,  97, 109, 115,
     47, 116, 121, 112, 101, 115,  47,  80,
    111, 115, 101,  65, 114, 114,  97, 121,
     46,  99,  97, 112, 110, 112,  58,  80,
    111, 115, 101,  65, 114, 114,  97, 121,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     19, 153, 130, 198, 110,  82, 149, 204,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 115, 101, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    221, 206, 134,  23,  41,  11, 221, 232,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_af8f32e2f176ffd0 = b_af8f32e2f176ffd0.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_af8f32e2f176ffd0[] = {
  &s_cc95526ec6829913,
  &s_e8dd0b291786cedd,
};
static const uint16_t m_af8f32e2f176ffd0[] = {0, 1};
static const uint16_t i_af8f32e2f176ffd0[] = {0, 1};
const ::capnp::_::RawSchema s_af8f32e2f176ffd0 = {
  0xaf8f32e2f176ffd0, b_af8f32e2f176ffd0.words, 54, d_af8f32e2f176ffd0, m_af8f32e2f176ffd0,
  2, 2, i_af8f32e2f176ffd0, nullptr, nullptr, { &s_af8f32e2f176ffd0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// PoseArray
constexpr uint16_t PoseArray::_capnpPrivate::dataWordSize;
constexpr uint16_t PoseArray::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind PoseArray::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PoseArray::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

