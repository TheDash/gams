// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Polygon.capnp

#include "Polygon.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<38> b_97431d390a665ba5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    165,  91, 102,  10,  57,  29,  67, 151,
     29,   0,   0,   0,   1,   0,   0,   0,
     19, 166, 106,  49, 174,  71, 145, 172,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 103,  97, 109, 115,
     47, 116, 121, 112, 101, 115,  47,  80,
    111, 108, 121, 103, 111, 110,  46,  99,
     97, 112, 110, 112,  58,  80, 111, 108,
    121, 103, 111, 110,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    112, 111, 105, 110, 116, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     59, 149,  39, 206, 192, 204, 161, 128,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_97431d390a665ba5 = b_97431d390a665ba5.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_97431d390a665ba5[] = {
  &s_80a1ccc0ce27953b,
};
static const uint16_t m_97431d390a665ba5[] = {0};
static const uint16_t i_97431d390a665ba5[] = {0};
const ::capnp::_::RawSchema s_97431d390a665ba5 = {
  0x97431d390a665ba5, b_97431d390a665ba5.words, 38, d_97431d390a665ba5, m_97431d390a665ba5,
  1, 1, i_97431d390a665ba5, nullptr, nullptr, { &s_97431d390a665ba5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// Polygon
constexpr uint16_t Polygon::_capnpPrivate::dataWordSize;
constexpr uint16_t Polygon::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Polygon::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Polygon::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

