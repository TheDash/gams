// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: LaserEcho.capnp

#include "LaserEcho.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<39> b_f9f76b8960a7610a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     10,  97, 167,  96, 137, 107, 247, 249,
     31,   0,   0,   0,   1,   0,   0,   0,
    231, 250, 243, 215, 229, 176, 107, 246,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 103,  97, 109, 115,
     47, 116, 121, 112, 101, 115,  47,  76,
     97, 115, 101, 114,  69,  99, 104, 111,
     46,  99,  97, 112, 110, 112,  58,  76,
     97, 115, 101, 114,  69,  99, 104, 111,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    101,  99, 104, 111, 101, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f9f76b8960a7610a = b_f9f76b8960a7610a.words;
#if !CAPNP_LITE
static const uint16_t m_f9f76b8960a7610a[] = {0};
static const uint16_t i_f9f76b8960a7610a[] = {0};
const ::capnp::_::RawSchema s_f9f76b8960a7610a = {
  0xf9f76b8960a7610a, b_f9f76b8960a7610a.words, 39, nullptr, m_f9f76b8960a7610a,
  0, 1, i_f9f76b8960a7610a, nullptr, nullptr, { &s_f9f76b8960a7610a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// LaserEcho
constexpr uint16_t LaserEcho::_capnpPrivate::dataWordSize;
constexpr uint16_t LaserEcho::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind LaserEcho::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LaserEcho::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

