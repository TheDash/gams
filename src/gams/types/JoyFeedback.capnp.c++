// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: JoyFeedback.capnp

#include "JoyFeedback.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<66> b_be4057b9a905a5f8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    248, 165,   5, 169, 185,  87,  64, 190,
     33,   0,   0,   0,   1,   0,   1,   0,
    246, 227, 198, 197, 118, 228,  30, 246,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 103,  97, 109, 115,
     47, 116, 121, 112, 101, 115,  47,  74,
    111, 121,  70, 101, 101, 100,  98,  97,
     99, 107,  46,  99,  97, 112, 110, 112,
     58,  74, 111, 121,  70, 101, 101, 100,
     98,  97,  99, 107,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    105, 110, 116, 101, 110, 115, 105, 116,
    121,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_be4057b9a905a5f8 = b_be4057b9a905a5f8.words;
#if !CAPNP_LITE
static const uint16_t m_be4057b9a905a5f8[] = {2, 0, 1};
static const uint16_t i_be4057b9a905a5f8[] = {0, 1, 2};
const ::capnp::_::RawSchema s_be4057b9a905a5f8 = {
  0xbe4057b9a905a5f8, b_be4057b9a905a5f8.words, 66, nullptr, m_be4057b9a905a5f8,
  0, 3, i_be4057b9a905a5f8, nullptr, nullptr, { &s_be4057b9a905a5f8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// JoyFeedback
constexpr uint16_t JoyFeedback::_capnpPrivate::dataWordSize;
constexpr uint16_t JoyFeedback::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind JoyFeedback::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* JoyFeedback::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

