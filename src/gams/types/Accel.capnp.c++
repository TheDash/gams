// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Accel.capnp

#include "Accel.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<49> b_94f98f21181524b1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    177,  36,  21,  24,  33, 143, 249, 148,
     27,   0,   0,   0,   1,   0,   0,   0,
    112,  46, 165, 141,  10, 119, 169, 148,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 103,  97, 109, 115,
     47, 116, 121, 112, 101, 115,  47,  65,
     99,  99, 101, 108,  46,  99,  97, 112,
    110, 112,  58,  65,  99,  99, 101, 108,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    108, 105, 110, 101,  97, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    212,  13, 137, 145, 254, 222,  42, 185,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 110, 103, 117, 108,  97, 114,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    212,  13, 137, 145, 254, 222,  42, 185,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_94f98f21181524b1 = b_94f98f21181524b1.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_94f98f21181524b1[] = {
  &s_b92adefe91890dd4,
};
static const uint16_t m_94f98f21181524b1[] = {1, 0};
static const uint16_t i_94f98f21181524b1[] = {0, 1};
const ::capnp::_::RawSchema s_94f98f21181524b1 = {
  0x94f98f21181524b1, b_94f98f21181524b1.words, 49, d_94f98f21181524b1, m_94f98f21181524b1,
  1, 2, i_94f98f21181524b1, nullptr, nullptr, { &s_94f98f21181524b1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// Accel
constexpr uint16_t Accel::_capnpPrivate::dataWordSize;
constexpr uint16_t Accel::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Accel::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Accel::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

