// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: MagneticField.capnp

#include "MagneticField.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<73> b_d2cfb624cb856e1b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     27, 110, 133, 203,  36, 182, 207, 210,
     35,   0,   0,   0,   1,   0,   0,   0,
    185, 121, 241, 197, 250,  18, 177, 218,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 103,  97, 109, 115,
     47, 116, 121, 112, 101, 115,  47,  77,
     97, 103, 110, 101, 116, 105,  99,  70,
    105, 101, 108, 100,  46,  99,  97, 112,
    110, 112,  58,  77,  97, 103, 110, 101,
    116, 105,  99,  70, 105, 101, 108, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0, 194,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 103, 110, 101, 116, 105,  99,
     70, 105, 101, 108, 100,  67, 111, 118,
     97, 114, 105,  97, 110,  99, 101,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     19, 153, 130, 198, 110,  82, 149, 204,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 103, 110, 101, 116, 105,  99,
     70, 105, 101, 108, 100,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    212,  13, 137, 145, 254, 222,  42, 185,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d2cfb624cb856e1b = b_d2cfb624cb856e1b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d2cfb624cb856e1b[] = {
  &s_b92adefe91890dd4,
  &s_cc95526ec6829913,
};
static const uint16_t m_d2cfb624cb856e1b[] = {1, 2, 0};
static const uint16_t i_d2cfb624cb856e1b[] = {0, 1, 2};
const ::capnp::_::RawSchema s_d2cfb624cb856e1b = {
  0xd2cfb624cb856e1b, b_d2cfb624cb856e1b.words, 73, d_d2cfb624cb856e1b, m_d2cfb624cb856e1b,
  2, 3, i_d2cfb624cb856e1b, nullptr, nullptr, { &s_d2cfb624cb856e1b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// MagneticField
constexpr uint16_t MagneticField::_capnpPrivate::dataWordSize;
constexpr uint16_t MagneticField::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind MagneticField::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MagneticField::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

