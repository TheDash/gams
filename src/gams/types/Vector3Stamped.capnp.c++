// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Vector3Stamped.capnp

#include "Vector3Stamped.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<51> b_e3b383b9ccf7775c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     92, 119, 247, 204, 185, 131, 179, 227,
     36,   0,   0,   0,   1,   0,   0,   0,
     71,  27, 102,  75,  37, 173, 155, 211,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 103,  97, 109, 115,
     47, 116, 121, 112, 101, 115,  47,  86,
    101,  99, 116, 111, 114,  51,  83, 116,
     97, 109, 112, 101, 100,  46,  99,  97,
    112, 110, 112,  58,  86, 101,  99, 116,
    111, 114,  51,  83, 116,  97, 109, 112,
    101, 100,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     19, 153, 130, 198, 110,  82, 149, 204,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 101,  99, 116, 111, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    212,  13, 137, 145, 254, 222,  42, 185,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e3b383b9ccf7775c = b_e3b383b9ccf7775c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e3b383b9ccf7775c[] = {
  &s_b92adefe91890dd4,
  &s_cc95526ec6829913,
};
static const uint16_t m_e3b383b9ccf7775c[] = {0, 1};
static const uint16_t i_e3b383b9ccf7775c[] = {0, 1};
const ::capnp::_::RawSchema s_e3b383b9ccf7775c = {
  0xe3b383b9ccf7775c, b_e3b383b9ccf7775c.words, 51, d_e3b383b9ccf7775c, m_e3b383b9ccf7775c,
  2, 2, i_e3b383b9ccf7775c, nullptr, nullptr, { &s_e3b383b9ccf7775c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// Vector3Stamped
constexpr uint16_t Vector3Stamped::_capnpPrivate::dataWordSize;
constexpr uint16_t Vector3Stamped::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Vector3Stamped::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Vector3Stamped::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

