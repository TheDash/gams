// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: OccupancyGrid.capnp

#include "OccupancyGrid.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<70> b_c0a3136514841be9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    233,  27, 132,  20, 101,  19, 163, 192,
     35,   0,   0,   0,   1,   0,   0,   0,
     94, 209, 110, 109, 166, 177,  14, 153,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 103,  97, 109, 115,
     47, 116, 121, 112, 101, 115,  47,  79,
     99,  99, 117, 112,  97, 110,  99, 121,
     71, 114, 105, 100,  46,  99,  97, 112,
    110, 112,  58,  79,  99,  99, 117, 112,
     97, 110,  99, 121,  71, 114, 105, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    105, 110, 102, 111,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    185, 200, 203, 184, 141, 150, 190, 210,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     19, 153, 130, 198, 110,  82, 149, 204,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c0a3136514841be9 = b_c0a3136514841be9.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c0a3136514841be9[] = {
  &s_cc95526ec6829913,
  &s_d2be968db8cbc8b9,
};
static const uint16_t m_c0a3136514841be9[] = {2, 1, 0};
static const uint16_t i_c0a3136514841be9[] = {0, 1, 2};
const ::capnp::_::RawSchema s_c0a3136514841be9 = {
  0xc0a3136514841be9, b_c0a3136514841be9.words, 70, d_c0a3136514841be9, m_c0a3136514841be9,
  2, 3, i_c0a3136514841be9, nullptr, nullptr, { &s_c0a3136514841be9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// OccupancyGrid
constexpr uint16_t OccupancyGrid::_capnpPrivate::dataWordSize;
constexpr uint16_t OccupancyGrid::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind OccupancyGrid::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* OccupancyGrid::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

