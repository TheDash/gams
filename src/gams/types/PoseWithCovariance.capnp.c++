// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: PoseWithCovariance.capnp

#include "PoseWithCovariance.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<57> b_c16ba9a53a31db31 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     49, 219,  49,  58, 165, 169, 107, 193,
     40,   0,   0,   0,   1,   0,   0,   0,
     92, 247, 222, 198, 223, 122,  76, 153,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   1,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 103,  97, 109, 115,
     47, 116, 121, 112, 101, 115,  47,  80,
    111, 115, 101,  87, 105, 116, 104,  67,
    111, 118,  97, 114, 105,  97, 110,  99,
    101,  46,  99,  97, 112, 110, 112,  58,
     80, 111, 115, 101,  87, 105, 116, 104,
     67, 111, 118,  97, 114, 105,  97, 110,
     99, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
    112, 111, 115, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    221, 206, 134,  23,  41,  11, 221, 232,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 118,  97, 114, 105,  97, 110,
     99, 101,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c16ba9a53a31db31 = b_c16ba9a53a31db31.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c16ba9a53a31db31[] = {
  &s_e8dd0b291786cedd,
};
static const uint16_t m_c16ba9a53a31db31[] = {1, 0};
static const uint16_t i_c16ba9a53a31db31[] = {0, 1};
const ::capnp::_::RawSchema s_c16ba9a53a31db31 = {
  0xc16ba9a53a31db31, b_c16ba9a53a31db31.words, 57, d_c16ba9a53a31db31, m_c16ba9a53a31db31,
  1, 2, i_c16ba9a53a31db31, nullptr, nullptr, { &s_c16ba9a53a31db31, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// PoseWithCovariance
constexpr uint16_t PoseWithCovariance::_capnpPrivate::dataWordSize;
constexpr uint16_t PoseWithCovariance::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind PoseWithCovariance::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PoseWithCovariance::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

