// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: PointStamped.capnp

#include "PointStamped.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<50> b_a7d814c620b6e426 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     38, 228, 182,  32, 198,  20, 216, 167,
     34,   0,   0,   0,   1,   0,   0,   0,
    231,  95,  50, 188, 163,  17, 110, 164,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 103,  97, 109, 115,
     47, 116, 121, 112, 101, 115,  47,  80,
    111, 105, 110, 116,  83, 116,  97, 109,
    112, 101, 100,  46,  99,  97, 112, 110,
    112,  58,  80, 111, 105, 110, 116,  83,
    116,  97, 109, 112, 101, 100,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     19, 153, 130, 198, 110,  82, 149, 204,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 105, 110, 116,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     78, 146, 187,  39,  53, 150, 244, 220,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a7d814c620b6e426 = b_a7d814c620b6e426.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a7d814c620b6e426[] = {
  &s_cc95526ec6829913,
  &s_dcf4963527bb924e,
};
static const uint16_t m_a7d814c620b6e426[] = {0, 1};
static const uint16_t i_a7d814c620b6e426[] = {0, 1};
const ::capnp::_::RawSchema s_a7d814c620b6e426 = {
  0xa7d814c620b6e426, b_a7d814c620b6e426.words, 50, d_a7d814c620b6e426, m_a7d814c620b6e426,
  2, 2, i_a7d814c620b6e426, nullptr, nullptr, { &s_a7d814c620b6e426, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// PointStamped
constexpr uint16_t PointStamped::_capnpPrivate::dataWordSize;
constexpr uint16_t PointStamped::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind PointStamped::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PointStamped::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

