// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: AccelWithCovariance.capnp

#include "AccelWithCovariance.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<57> b_f7d3ae60e31dac13 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     19, 172,  29, 227,  96, 174, 211, 247,
     41,   0,   0,   0,   1,   0,   0,   0,
     80, 246, 174, 247, 146,   0, 229, 231,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   1,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 103,  97, 109, 115,
     47, 116, 121, 112, 101, 115,  47,  65,
     99,  99, 101, 108,  87, 105, 116, 104,
     67, 111, 118,  97, 114, 105,  97, 110,
     99, 101,  46,  99,  97, 112, 110, 112,
     58,  65,  99,  99, 101, 108,  87, 105,
    116, 104,  67, 111, 118,  97, 114, 105,
     97, 110,  99, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
     97,  99,  99, 101, 108,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    177,  36,  21,  24,  33, 143, 249, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 118,  97, 114, 105,  97, 110,
     99, 101,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f7d3ae60e31dac13 = b_f7d3ae60e31dac13.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f7d3ae60e31dac13[] = {
  &s_94f98f21181524b1,
};
static const uint16_t m_f7d3ae60e31dac13[] = {0, 1};
static const uint16_t i_f7d3ae60e31dac13[] = {0, 1};
const ::capnp::_::RawSchema s_f7d3ae60e31dac13 = {
  0xf7d3ae60e31dac13, b_f7d3ae60e31dac13.words, 57, d_f7d3ae60e31dac13, m_f7d3ae60e31dac13,
  1, 2, i_f7d3ae60e31dac13, nullptr, nullptr, { &s_f7d3ae60e31dac13, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// AccelWithCovariance
constexpr uint16_t AccelWithCovariance::_capnpPrivate::dataWordSize;
constexpr uint16_t AccelWithCovariance::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind AccelWithCovariance::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* AccelWithCovariance::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

