// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: InertiaStamped.capnp

#include "InertiaStamped.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<51> b_bf84c7e11be62923 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     35,  41, 230,  27, 225, 199, 132, 191,
     36,   0,   0,   0,   1,   0,   0,   0,
     32, 156, 120, 210, 104, 101, 113, 217,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 103,  97, 109, 115,
     47, 116, 121, 112, 101, 115,  47,  73,
    110, 101, 114, 116, 105,  97,  83, 116,
     97, 109, 112, 101, 100,  46,  99,  97,
    112, 110, 112,  58,  73, 110, 101, 114,
    116, 105,  97,  83, 116,  97, 109, 112,
    101, 100,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     19, 153, 130, 198, 110,  82, 149, 204,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 101, 114, 116, 105,  97,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    140,  55,  30,  13,  29, 135,  25, 186,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bf84c7e11be62923 = b_bf84c7e11be62923.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bf84c7e11be62923[] = {
  &s_ba19871d0d1e378c,
  &s_cc95526ec6829913,
};
static const uint16_t m_bf84c7e11be62923[] = {0, 1};
static const uint16_t i_bf84c7e11be62923[] = {0, 1};
const ::capnp::_::RawSchema s_bf84c7e11be62923 = {
  0xbf84c7e11be62923, b_bf84c7e11be62923.words, 51, d_bf84c7e11be62923, m_bf84c7e11be62923,
  2, 2, i_bf84c7e11be62923, nullptr, nullptr, { &s_bf84c7e11be62923, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// InertiaStamped
constexpr uint16_t InertiaStamped::_capnpPrivate::dataWordSize;
constexpr uint16_t InertiaStamped::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind InertiaStamped::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* InertiaStamped::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

