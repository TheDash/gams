// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: TwistWithCovariance.capnp

#include "TwistWithCovariance.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<57> b_82cba345e99a7529 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     41, 117, 154, 233,  69, 163, 203, 130,
     41,   0,   0,   0,   1,   0,   0,   0,
    103,  25, 101, 133, 159, 217, 240, 143,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   1,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 103,  97, 109, 115,
     47, 116, 121, 112, 101, 115,  47,  84,
    119, 105, 115, 116,  87, 105, 116, 104,
     67, 111, 118,  97, 114, 105,  97, 110,
     99, 101,  46,  99,  97, 112, 110, 112,
     58,  84, 119, 105, 115, 116,  87, 105,
    116, 104,  67, 111, 118,  97, 114, 105,
     97, 110,  99, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
    116, 119, 105, 115, 116,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    107, 226, 108, 149, 223, 129, 234, 232,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 118,  97, 114, 105,  97, 110,
     99, 101,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_82cba345e99a7529 = b_82cba345e99a7529.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_82cba345e99a7529[] = {
  &s_e8ea81df956ce26b,
};
static const uint16_t m_82cba345e99a7529[] = {1, 0};
static const uint16_t i_82cba345e99a7529[] = {0, 1};
const ::capnp::_::RawSchema s_82cba345e99a7529 = {
  0x82cba345e99a7529, b_82cba345e99a7529.words, 57, d_82cba345e99a7529, m_82cba345e99a7529,
  1, 2, i_82cba345e99a7529, nullptr, nullptr, { &s_82cba345e99a7529, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// TwistWithCovariance
constexpr uint16_t TwistWithCovariance::_capnpPrivate::dataWordSize;
constexpr uint16_t TwistWithCovariance::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TwistWithCovariance::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TwistWithCovariance::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

