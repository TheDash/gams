// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Path.capnp

#include "Path.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<52> b_80bac7052ba9768a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    138, 118, 169,  43,   5, 199, 186, 128,
     26,   0,   0,   0,   1,   0,   0,   0,
     91,  20, 155, 133, 217, 241,  73, 160,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 103,  97, 109, 115,
     47, 116, 121, 112, 101, 115,  47,  80,
     97, 116, 104,  46,  99,  97, 112, 110,
    112,  58,  80,  97, 116, 104,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     19, 153, 130, 198, 110,  82, 149, 204,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 115, 101, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    134, 209, 240, 206, 164, 205, 105, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_80bac7052ba9768a = b_80bac7052ba9768a.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_80bac7052ba9768a[] = {
  &s_bf69cda4cef0d186,
  &s_cc95526ec6829913,
};
static const uint16_t m_80bac7052ba9768a[] = {0, 1};
static const uint16_t i_80bac7052ba9768a[] = {0, 1};
const ::capnp::_::RawSchema s_80bac7052ba9768a = {
  0x80bac7052ba9768a, b_80bac7052ba9768a.words, 52, d_80bac7052ba9768a, m_80bac7052ba9768a,
  2, 2, i_80bac7052ba9768a, nullptr, nullptr, { &s_80bac7052ba9768a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// Path
constexpr uint16_t Path::_capnpPrivate::dataWordSize;
constexpr uint16_t Path::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Path::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Path::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

