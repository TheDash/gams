// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: ChannelFloat32.capnp

#include "ChannelFloat32.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<55> b_a861126170de6473 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    115, 100, 222, 112,  97,  18,  97, 168,
     36,   0,   0,   0,   1,   0,   0,   0,
    198, 232, 103,  57, 127, 196, 106, 236,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 103,  97, 109, 115,
     47, 116, 121, 112, 101, 115,  47,  67,
    104,  97, 110, 110, 101, 108,  70, 108,
    111,  97, 116,  51,  50,  46,  99,  97,
    112, 110, 112,  58,  67, 104,  97, 110,
    110, 101, 108,  70, 108, 111,  97, 116,
     51,  50,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    118,  97, 108, 117, 101, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a861126170de6473 = b_a861126170de6473.words;
#if !CAPNP_LITE
static const uint16_t m_a861126170de6473[] = {1, 0};
static const uint16_t i_a861126170de6473[] = {0, 1};
const ::capnp::_::RawSchema s_a861126170de6473 = {
  0xa861126170de6473, b_a861126170de6473.words, 55, nullptr, m_a861126170de6473,
  0, 2, i_a861126170de6473, nullptr, nullptr, { &s_a861126170de6473, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// ChannelFloat32
constexpr uint16_t ChannelFloat32::_capnpPrivate::dataWordSize;
constexpr uint16_t ChannelFloat32::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ChannelFloat32::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ChannelFloat32::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

