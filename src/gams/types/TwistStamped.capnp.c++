// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: TwistStamped.capnp

#include "TwistStamped.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<50> b_f986394ae62fdfaf = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    175, 223,  47, 230,  74,  57, 134, 249,
     34,   0,   0,   0,   1,   0,   0,   0,
    185, 107, 138,  17,  55, 210, 190, 233,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 103,  97, 109, 115,
     47, 116, 121, 112, 101, 115,  47,  84,
    119, 105, 115, 116,  83, 116,  97, 109,
    112, 101, 100,  46,  99,  97, 112, 110,
    112,  58,  84, 119, 105, 115, 116,  83,
    116,  97, 109, 112, 101, 100,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    116, 119, 105, 115, 116,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    107, 226, 108, 149, 223, 129, 234, 232,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     19, 153, 130, 198, 110,  82, 149, 204,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f986394ae62fdfaf = b_f986394ae62fdfaf.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f986394ae62fdfaf[] = {
  &s_cc95526ec6829913,
  &s_e8ea81df956ce26b,
};
static const uint16_t m_f986394ae62fdfaf[] = {1, 0};
static const uint16_t i_f986394ae62fdfaf[] = {0, 1};
const ::capnp::_::RawSchema s_f986394ae62fdfaf = {
  0xf986394ae62fdfaf, b_f986394ae62fdfaf.words, 50, d_f986394ae62fdfaf, m_f986394ae62fdfaf,
  2, 2, i_f986394ae62fdfaf, nullptr, nullptr, { &s_f986394ae62fdfaf, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// TwistStamped
constexpr uint16_t TwistStamped::_capnpPrivate::dataWordSize;
constexpr uint16_t TwistStamped::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TwistStamped::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TwistStamped::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

