// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: PoseWithCovarianceStamped.capnp

#include "PoseWithCovarianceStamped.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<54> b_ddf75512de3ab07f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    127, 176,  58, 222,  18,  85, 247, 221,
     47,   0,   0,   0,   1,   0,   0,   0,
    170,  15, 144, 246,  67,  36, 153, 133,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   2,   0,   0,
     57,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 103,  97, 109, 115,
     47, 116, 121, 112, 101, 115,  47,  80,
    111, 115, 101,  87, 105, 116, 104,  67,
    111, 118,  97, 114, 105,  97, 110,  99,
    101,  83, 116,  97, 109, 112, 101, 100,
     46,  99,  97, 112, 110, 112,  58,  80,
    111, 115, 101,  87, 105, 116, 104,  67,
    111, 118,  97, 114, 105,  97, 110,  99,
    101,  83, 116,  97, 109, 112, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     19, 153, 130, 198, 110,  82, 149, 204,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 115, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     49, 219,  49,  58, 165, 169, 107, 193,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ddf75512de3ab07f = b_ddf75512de3ab07f.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ddf75512de3ab07f[] = {
  &s_c16ba9a53a31db31,
  &s_cc95526ec6829913,
};
static const uint16_t m_ddf75512de3ab07f[] = {0, 1};
static const uint16_t i_ddf75512de3ab07f[] = {0, 1};
const ::capnp::_::RawSchema s_ddf75512de3ab07f = {
  0xddf75512de3ab07f, b_ddf75512de3ab07f.words, 54, d_ddf75512de3ab07f, m_ddf75512de3ab07f,
  2, 2, i_ddf75512de3ab07f, nullptr, nullptr, { &s_ddf75512de3ab07f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// PoseWithCovarianceStamped
constexpr uint16_t PoseWithCovarianceStamped::_capnpPrivate::dataWordSize;
constexpr uint16_t PoseWithCovarianceStamped::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind PoseWithCovarianceStamped::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PoseWithCovarianceStamped::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

