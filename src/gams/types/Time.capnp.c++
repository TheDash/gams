// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Time.capnp

#include "Time.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<33> b_8328f87d15e19d4b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     75, 157, 225,  21, 125, 248,  40, 131,
     26,   0,   0,   0,   1,   0,   1,   0,
     21,  44, 235,  75,  73, 234, 144, 246,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 103,  97, 109, 115,
     47, 116, 121, 112, 101, 115,  47,  84,
    105, 109, 101,  46,  99,  97, 112, 110,
    112,  58,  84, 105, 109, 101,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8328f87d15e19d4b = b_8328f87d15e19d4b.words;
#if !CAPNP_LITE
static const uint16_t m_8328f87d15e19d4b[] = {0};
static const uint16_t i_8328f87d15e19d4b[] = {0};
const ::capnp::_::RawSchema s_8328f87d15e19d4b = {
  0x8328f87d15e19d4b, b_8328f87d15e19d4b.words, 33, nullptr, m_8328f87d15e19d4b,
  0, 1, i_8328f87d15e19d4b, nullptr, nullptr, { &s_8328f87d15e19d4b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// Time
constexpr uint16_t Time::_capnpPrivate::dataWordSize;
constexpr uint16_t Time::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Time::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Time::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

