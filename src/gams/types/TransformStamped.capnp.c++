// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: TransformStamped.capnp

#include "TransformStamped.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<68> b_f5951016b00f88f9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    249, 136,  15, 176,  22,  16, 149, 245,
     38,   0,   0,   0,   1,   0,   0,   0,
    225, 123, 142, 131, 173,  94,  41, 180,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 103,  97, 109, 115,
     47, 116, 121, 112, 101, 115,  47,  84,
    114,  97, 110, 115, 102, 111, 114, 109,
     83, 116,  97, 109, 112, 101, 100,  46,
     99,  97, 112, 110, 112,  58,  84, 114,
     97, 110, 115, 102, 111, 114, 109,  83,
    116,  97, 109, 112, 101, 100,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     19, 153, 130, 198, 110,  82, 149, 204,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 114,  97, 110, 115, 102, 111, 114,
    109,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    100,  68,  72, 249, 203, 137, 100, 190,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104, 105, 108, 100,  70, 114,  97,
    109, 101,  73, 100,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f5951016b00f88f9 = b_f5951016b00f88f9.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f5951016b00f88f9[] = {
  &s_be6489cbf9484464,
  &s_cc95526ec6829913,
};
static const uint16_t m_f5951016b00f88f9[] = {2, 0, 1};
static const uint16_t i_f5951016b00f88f9[] = {0, 1, 2};
const ::capnp::_::RawSchema s_f5951016b00f88f9 = {
  0xf5951016b00f88f9, b_f5951016b00f88f9.words, 68, d_f5951016b00f88f9, m_f5951016b00f88f9,
  2, 3, i_f5951016b00f88f9, nullptr, nullptr, { &s_f5951016b00f88f9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// TransformStamped
constexpr uint16_t TransformStamped::_capnpPrivate::dataWordSize;
constexpr uint16_t TransformStamped::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TransformStamped::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TransformStamped::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

