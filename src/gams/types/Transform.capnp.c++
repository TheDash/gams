// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Transform.capnp

#include "Transform.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<52> b_be6489cbf9484464 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    100,  68,  72, 249, 203, 137, 100, 190,
     31,   0,   0,   0,   1,   0,   0,   0,
     69, 157, 182, 243, 224, 245,  92, 230,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 103,  97, 109, 115,
     47, 116, 121, 112, 101, 115,  47,  84,
    114,  97, 110, 115, 102, 111, 114, 109,
     46,  99,  97, 112, 110, 112,  58,  84,
    114,  97, 110, 115, 102, 111, 114, 109,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    116, 114,  97, 110, 115, 108,  97, 116,
    105, 111, 110,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    212,  13, 137, 145, 254, 222,  42, 185,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111, 116,  97, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    130, 185, 227,   6,  29, 107,  64, 195,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_be6489cbf9484464 = b_be6489cbf9484464.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_be6489cbf9484464[] = {
  &s_b92adefe91890dd4,
  &s_c3406b1d06e3b982,
};
static const uint16_t m_be6489cbf9484464[] = {1, 0};
static const uint16_t i_be6489cbf9484464[] = {0, 1};
const ::capnp::_::RawSchema s_be6489cbf9484464 = {
  0xbe6489cbf9484464, b_be6489cbf9484464.words, 52, d_be6489cbf9484464, m_be6489cbf9484464,
  2, 2, i_be6489cbf9484464, nullptr, nullptr, { &s_be6489cbf9484464, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// Transform
constexpr uint16_t Transform::_capnpPrivate::dataWordSize;
constexpr uint16_t Transform::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Transform::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Transform::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

