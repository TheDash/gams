// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: TwistWithCovarianceStamped.capnp

#include "TwistWithCovarianceStamped.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<54> b_c9a2fe719913fe18 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     24, 254,  19, 153, 113, 254, 162, 201,
     48,   0,   0,   0,   1,   0,   0,   0,
    164,  20, 173, 219,  44,  13,  62, 172,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   2,   0,   0,
     57,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 103,  97, 109, 115,
     47, 116, 121, 112, 101, 115,  47,  84,
    119, 105, 115, 116,  87, 105, 116, 104,
     67, 111, 118,  97, 114, 105,  97, 110,
     99, 101,  83, 116,  97, 109, 112, 101,
    100,  46,  99,  97, 112, 110, 112,  58,
     84, 119, 105, 115, 116,  87, 105, 116,
    104,  67, 111, 118,  97, 114, 105,  97,
    110,  99, 101,  83, 116,  97, 109, 112,
    101, 100,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    116, 119, 105, 115, 116,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     41, 117, 154, 233,  69, 163, 203, 130,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     19, 153, 130, 198, 110,  82, 149, 204,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c9a2fe719913fe18 = b_c9a2fe719913fe18.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c9a2fe719913fe18[] = {
  &s_82cba345e99a7529,
  &s_cc95526ec6829913,
};
static const uint16_t m_c9a2fe719913fe18[] = {1, 0};
static const uint16_t i_c9a2fe719913fe18[] = {0, 1};
const ::capnp::_::RawSchema s_c9a2fe719913fe18 = {
  0xc9a2fe719913fe18, b_c9a2fe719913fe18.words, 54, d_c9a2fe719913fe18, m_c9a2fe719913fe18,
  2, 2, i_c9a2fe719913fe18, nullptr, nullptr, { &s_c9a2fe719913fe18, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// TwistWithCovarianceStamped
constexpr uint16_t TwistWithCovarianceStamped::_capnpPrivate::dataWordSize;
constexpr uint16_t TwistWithCovarianceStamped::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TwistWithCovarianceStamped::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TwistWithCovarianceStamped::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

