// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: TwistStamped.capn

#include "TwistStamped.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<48> b_9b20b9d1d9214bb2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    178,  75,  33, 217, 209, 185,  32, 155,
     18,   0,   0,   0,   1,   0,   0,   0,
    141,  10, 195, 201,  97, 156, 238, 185,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84, 119, 105, 115, 116,  83, 116,  97,
    109, 112, 101, 100,  46,  99,  97, 112,
    110,  58,  84, 119, 105, 115, 116,  83,
    116,  97, 109, 112, 101, 100,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    116, 119, 105, 115, 116,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    214,  34,  14,  24, 101, 212, 239, 172,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    116, 164, 244, 113, 190,  47,  19, 162,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9b20b9d1d9214bb2 = b_9b20b9d1d9214bb2.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9b20b9d1d9214bb2[] = {
  &s_a2132fbe71f4a474,
  &s_acefd465180e22d6,
};
static const uint16_t m_9b20b9d1d9214bb2[] = {1, 0};
static const uint16_t i_9b20b9d1d9214bb2[] = {0, 1};
const ::capnp::_::RawSchema s_9b20b9d1d9214bb2 = {
  0x9b20b9d1d9214bb2, b_9b20b9d1d9214bb2.words, 48, d_9b20b9d1d9214bb2, m_9b20b9d1d9214bb2,
  2, 2, i_9b20b9d1d9214bb2, nullptr, nullptr, { &s_9b20b9d1d9214bb2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// TwistStamped
constexpr uint16_t TwistStamped::_capnpPrivate::dataWordSize;
constexpr uint16_t TwistStamped::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TwistStamped::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TwistStamped::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

