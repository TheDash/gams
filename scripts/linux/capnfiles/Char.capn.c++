// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Char.capn

#include "Char.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<31> b_8842450bfe360d47 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     71,  13,  54, 254,  11,  69,  66, 136,
     10,   0,   0,   0,   1,   0,   1,   0,
    166,  46,   3,  33,  55,  29, 182, 159,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   0,   0,   0,
     25,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     67, 104,  97, 114,  46,  99,  97, 112,
    110,  58,  67, 104,  97, 114,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8842450bfe360d47 = b_8842450bfe360d47.words;
#if !CAPNP_LITE
static const uint16_t m_8842450bfe360d47[] = {0};
static const uint16_t i_8842450bfe360d47[] = {0};
const ::capnp::_::RawSchema s_8842450bfe360d47 = {
  0x8842450bfe360d47, b_8842450bfe360d47.words, 31, nullptr, m_8842450bfe360d47,
  0, 1, i_8842450bfe360d47, nullptr, nullptr, { &s_8842450bfe360d47, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// Char
constexpr uint16_t Char::_capnpPrivate::dataWordSize;
constexpr uint16_t Char::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Char::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Char::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

