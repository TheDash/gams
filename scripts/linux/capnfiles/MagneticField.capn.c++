// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: MagneticField.capn

#include "MagneticField.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<71> b_a3990319acba8f99 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    153, 143, 186, 172,  25,   3, 153, 163,
     19,   0,   0,   0,   1,   0,   0,   0,
    211, 245,  78, 146, 102,   4,  16, 132,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,  97, 103, 110, 101, 116, 105,  99,
     70, 105, 101, 108, 100,  46,  99,  97,
    112, 110,  58,  77,  97, 103, 110, 101,
    116, 105,  99,  70, 105, 101, 108, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0, 194,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 103, 110, 101, 116, 105,  99,
     70, 105, 101, 108, 100,  67, 111, 118,
     97, 114, 105,  97, 110,  99, 101,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    116, 164, 244, 113, 190,  47,  19, 162,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 103, 110, 101, 116, 105,  99,
     70, 105, 101, 108, 100,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     75, 153,  28, 131, 204, 196,  93, 172,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a3990319acba8f99 = b_a3990319acba8f99.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a3990319acba8f99[] = {
  &s_a2132fbe71f4a474,
  &s_ac5dc4cc831c994b,
};
static const uint16_t m_a3990319acba8f99[] = {1, 2, 0};
static const uint16_t i_a3990319acba8f99[] = {0, 1, 2};
const ::capnp::_::RawSchema s_a3990319acba8f99 = {
  0xa3990319acba8f99, b_a3990319acba8f99.words, 71, d_a3990319acba8f99, m_a3990319acba8f99,
  2, 3, i_a3990319acba8f99, nullptr, nullptr, { &s_a3990319acba8f99, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// MagneticField
constexpr uint16_t MagneticField::_capnpPrivate::dataWordSize;
constexpr uint16_t MagneticField::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind MagneticField::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MagneticField::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

