// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: OccupancyGrid.capn

#include "OccupancyGrid.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<68> b_a5068b86fff1bda6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    166, 189, 241, 255, 134, 139,   6, 165,
     19,   0,   0,   0,   1,   0,   0,   0,
    102, 112, 171, 105, 201, 240, 131, 191,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     79,  99,  99, 117, 112,  97, 110,  99,
    121,  71, 114, 105, 100,  46,  99,  97,
    112, 110,  58,  79,  99,  99, 117, 112,
     97, 110,  99, 121,  71, 114, 105, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    105, 110, 102, 111,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    201, 229, 102,  67, 199,  42, 126, 160,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    116, 164, 244, 113, 190,  47,  19, 162,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a5068b86fff1bda6 = b_a5068b86fff1bda6.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a5068b86fff1bda6[] = {
  &s_a07e2ac74366e5c9,
  &s_a2132fbe71f4a474,
};
static const uint16_t m_a5068b86fff1bda6[] = {2, 1, 0};
static const uint16_t i_a5068b86fff1bda6[] = {0, 1, 2};
const ::capnp::_::RawSchema s_a5068b86fff1bda6 = {
  0xa5068b86fff1bda6, b_a5068b86fff1bda6.words, 68, d_a5068b86fff1bda6, m_a5068b86fff1bda6,
  2, 3, i_a5068b86fff1bda6, nullptr, nullptr, { &s_a5068b86fff1bda6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// OccupancyGrid
constexpr uint16_t OccupancyGrid::_capnpPrivate::dataWordSize;
constexpr uint16_t OccupancyGrid::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind OccupancyGrid::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* OccupancyGrid::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

