// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: UInt32.capn

#include "UInt32.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<32> b_e02ebc849cb3088b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    139,   8, 179, 156, 132, 188,  46, 224,
     12,   0,   0,   0,   1,   0,   0,   0,
    185, 115, 210, 239,   4,  82, 168, 239,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,  73, 110, 116,  51,  50,  46,  99,
     97, 112, 110,  58,  85,  73, 110, 116,
     51,  50,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    139,   8, 179, 156, 132, 188,  46, 224,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e02ebc849cb3088b = b_e02ebc849cb3088b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e02ebc849cb3088b[] = {
  &s_e02ebc849cb3088b,
};
static const uint16_t m_e02ebc849cb3088b[] = {0};
static const uint16_t i_e02ebc849cb3088b[] = {0};
const ::capnp::_::RawSchema s_e02ebc849cb3088b = {
  0xe02ebc849cb3088b, b_e02ebc849cb3088b.words, 32, d_e02ebc849cb3088b, m_e02ebc849cb3088b,
  1, 1, i_e02ebc849cb3088b, nullptr, nullptr, { &s_e02ebc849cb3088b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// UInt32
constexpr uint16_t UInt32::_capnpPrivate::dataWordSize;
constexpr uint16_t UInt32::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind UInt32::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* UInt32::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

