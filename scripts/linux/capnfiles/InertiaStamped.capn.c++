// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: InertiaStamped.capn

#include "InertiaStamped.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<49> b_d3744c53409e19db = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    219,  25, 158,  64,  83,  76, 116, 211,
     20,   0,   0,   0,   1,   0,   0,   0,
      9,  73, 141, 113,  31,  70, 253, 162,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73, 110, 101, 114, 116, 105,  97,  83,
    116,  97, 109, 112, 101, 100,  46,  99,
     97, 112, 110,  58,  73, 110, 101, 114,
    116, 105,  97,  83, 116,  97, 109, 112,
    101, 100,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    116, 164, 244, 113, 190,  47,  19, 162,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 101, 114, 116, 105,  97,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    104, 140, 237, 183,  97,   4, 249, 243,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d3744c53409e19db = b_d3744c53409e19db.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d3744c53409e19db[] = {
  &s_a2132fbe71f4a474,
  &s_f3f90461b7ed8c68,
};
static const uint16_t m_d3744c53409e19db[] = {0, 1};
static const uint16_t i_d3744c53409e19db[] = {0, 1};
const ::capnp::_::RawSchema s_d3744c53409e19db = {
  0xd3744c53409e19db, b_d3744c53409e19db.words, 49, d_d3744c53409e19db, m_d3744c53409e19db,
  2, 2, i_d3744c53409e19db, nullptr, nullptr, { &s_d3744c53409e19db, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// InertiaStamped
constexpr uint16_t InertiaStamped::_capnpPrivate::dataWordSize;
constexpr uint16_t InertiaStamped::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind InertiaStamped::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* InertiaStamped::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

