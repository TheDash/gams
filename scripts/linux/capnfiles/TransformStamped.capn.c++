// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: TransformStamped.capn

#include "TransformStamped.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<66> b_ecb410724e3080d1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    209, 128,  48,  78, 114,  16, 180, 236,
     22,   0,   0,   0,   1,   0,   0,   0,
    178,  70, 184, 155, 100, 235, 161, 158,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84, 114,  97, 110, 115, 102, 111, 114,
    109,  83, 116,  97, 109, 112, 101, 100,
     46,  99,  97, 112, 110,  58,  84, 114,
     97, 110, 115, 102, 111, 114, 109,  83,
    116,  97, 109, 112, 101, 100,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    116, 164, 244, 113, 190,  47,  19, 162,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 114,  97, 110, 115, 102, 111, 114,
    109,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     64,  13, 209, 129, 101,  87, 234, 156,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104, 105, 108, 100,  70, 114,  97,
    109, 101,  73, 100,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ecb410724e3080d1 = b_ecb410724e3080d1.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ecb410724e3080d1[] = {
  &s_9cea576581d10d40,
  &s_a2132fbe71f4a474,
};
static const uint16_t m_ecb410724e3080d1[] = {2, 0, 1};
static const uint16_t i_ecb410724e3080d1[] = {0, 1, 2};
const ::capnp::_::RawSchema s_ecb410724e3080d1 = {
  0xecb410724e3080d1, b_ecb410724e3080d1.words, 66, d_ecb410724e3080d1, m_ecb410724e3080d1,
  2, 3, i_ecb410724e3080d1, nullptr, nullptr, { &s_ecb410724e3080d1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// TransformStamped
constexpr uint16_t TransformStamped::_capnpPrivate::dataWordSize;
constexpr uint16_t TransformStamped::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TransformStamped::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TransformStamped::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

