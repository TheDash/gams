// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Path.capn

#include "Path.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<50> b_e7ab70f8a793c162 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     98, 193, 147, 167, 248, 112, 171, 231,
     10,   0,   0,   0,   1,   0,   0,   0,
    236,  81, 196,  33, 171,  82, 104, 143,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   0,   0,   0,
     25,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,  97, 116, 104,  46,  99,  97, 112,
    110,  58,  80,  97, 116, 104,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    116, 164, 244, 113, 190,  47,  19, 162,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 115, 101, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     94, 101, 226,  98, 128, 125, 121, 192,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e7ab70f8a793c162 = b_e7ab70f8a793c162.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e7ab70f8a793c162[] = {
  &s_a2132fbe71f4a474,
  &s_c0797d8062e2655e,
};
static const uint16_t m_e7ab70f8a793c162[] = {0, 1};
static const uint16_t i_e7ab70f8a793c162[] = {0, 1};
const ::capnp::_::RawSchema s_e7ab70f8a793c162 = {
  0xe7ab70f8a793c162, b_e7ab70f8a793c162.words, 50, d_e7ab70f8a793c162, m_e7ab70f8a793c162,
  2, 2, i_e7ab70f8a793c162, nullptr, nullptr, { &s_e7ab70f8a793c162, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// Path
constexpr uint16_t Path::_capnpPrivate::dataWordSize;
constexpr uint16_t Path::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Path::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Path::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

