// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: AccelStamped.capn

#include "AccelStamped.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<48> b_fffa8e173c67dddf = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    223, 221, 103,  60,  23, 142, 250, 255,
     18,   0,   0,   0,   1,   0,   0,   0,
     91, 245, 126,  85, 143, 213,  17, 199,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,  99,  99, 101, 108,  83, 116,  97,
    109, 112, 101, 100,  46,  99,  97, 112,
    110,  58,  65,  99,  99, 101, 108,  83,
    116,  97, 109, 112, 101, 100,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    116, 164, 244, 113, 190,  47,  19, 162,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  99,  99, 101, 108,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    132, 120,  12, 148, 193, 172,  22, 228,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fffa8e173c67dddf = b_fffa8e173c67dddf.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_fffa8e173c67dddf[] = {
  &s_a2132fbe71f4a474,
  &s_e416acc1940c7884,
};
static const uint16_t m_fffa8e173c67dddf[] = {1, 0};
static const uint16_t i_fffa8e173c67dddf[] = {0, 1};
const ::capnp::_::RawSchema s_fffa8e173c67dddf = {
  0xfffa8e173c67dddf, b_fffa8e173c67dddf.words, 48, d_fffa8e173c67dddf, m_fffa8e173c67dddf,
  2, 2, i_fffa8e173c67dddf, nullptr, nullptr, { &s_fffa8e173c67dddf, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// AccelStamped
constexpr uint16_t AccelStamped::_capnpPrivate::dataWordSize;
constexpr uint16_t AccelStamped::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind AccelStamped::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* AccelStamped::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

