// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Polygon.capn

#include "Polygon.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<36> b_b97ddb5d4b7c7e3c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     60, 126, 124,  75,  93, 219, 125, 185,
     13,   0,   0,   0,   1,   0,   0,   0,
     23, 232, 215, 247, 122, 129, 111, 241,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80, 111, 108, 121, 103, 111, 110,  46,
     99,  97, 112, 110,  58,  80, 111, 108,
    121, 103, 111, 110,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    112, 111, 105, 110, 116, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    199, 251,  53,   9,  23, 234, 252, 159,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b97ddb5d4b7c7e3c = b_b97ddb5d4b7c7e3c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b97ddb5d4b7c7e3c[] = {
  &s_9ffcea170935fbc7,
};
static const uint16_t m_b97ddb5d4b7c7e3c[] = {0};
static const uint16_t i_b97ddb5d4b7c7e3c[] = {0};
const ::capnp::_::RawSchema s_b97ddb5d4b7c7e3c = {
  0xb97ddb5d4b7c7e3c, b_b97ddb5d4b7c7e3c.words, 36, d_b97ddb5d4b7c7e3c, m_b97ddb5d4b7c7e3c,
  1, 1, i_b97ddb5d4b7c7e3c, nullptr, nullptr, { &s_b97ddb5d4b7c7e3c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// Polygon
constexpr uint16_t Polygon::_capnpPrivate::dataWordSize;
constexpr uint16_t Polygon::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Polygon::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Polygon::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

