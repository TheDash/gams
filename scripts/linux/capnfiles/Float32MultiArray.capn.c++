// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Float32MultiArray.capn

#include "Float32MultiArray.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<54> b_f6ad979c279d00cf = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    207,   0, 157,  39, 156, 151, 173, 246,
     23,   0,   0,   0,   1,   0,   0,   0,
     47, 193,  22, 145,  56, 204, 147, 140,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     70, 108, 111,  97, 116,  51,  50,  77,
    117, 108, 116, 105,  65, 114, 114,  97,
    121,  46,  99,  97, 112, 110,  58,  70,
    108, 111,  97, 116,  51,  50,  77, 117,
    108, 116, 105,  65, 114, 114,  97, 121,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 121, 111, 117, 116,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    234,  33, 254, 243, 231,  46, 152, 218,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f6ad979c279d00cf = b_f6ad979c279d00cf.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f6ad979c279d00cf[] = {
  &s_da982ee7f3fe21ea,
};
static const uint16_t m_f6ad979c279d00cf[] = {0, 1};
static const uint16_t i_f6ad979c279d00cf[] = {0, 1};
const ::capnp::_::RawSchema s_f6ad979c279d00cf = {
  0xf6ad979c279d00cf, b_f6ad979c279d00cf.words, 54, d_f6ad979c279d00cf, m_f6ad979c279d00cf,
  1, 2, i_f6ad979c279d00cf, nullptr, nullptr, { &s_f6ad979c279d00cf, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// Float32MultiArray
constexpr uint16_t Float32MultiArray::_capnpPrivate::dataWordSize;
constexpr uint16_t Float32MultiArray::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Float32MultiArray::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Float32MultiArray::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

