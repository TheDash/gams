// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: PoseWithCovarianceStamped.capn

#include "PoseWithCovarianceStamped.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<52> b_ba201cdcc69487e6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    230, 135, 148, 198, 220,  28,  32, 186,
     31,   0,   0,   0,   1,   0,   0,   0,
      2,  68, 105, 198, 142,  45, 129, 139,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   1,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80, 111, 115, 101,  87, 105, 116, 104,
     67, 111, 118,  97, 114, 105,  97, 110,
     99, 101,  83, 116,  97, 109, 112, 101,
    100,  46,  99,  97, 112, 110,  58,  80,
    111, 115, 101,  87, 105, 116, 104,  67,
    111, 118,  97, 114, 105,  97, 110,  99,
    101,  83, 116,  97, 109, 112, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    116, 164, 244, 113, 190,  47,  19, 162,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 115, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     99,  55, 122,  75, 207, 187,  59, 211,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ba201cdcc69487e6 = b_ba201cdcc69487e6.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ba201cdcc69487e6[] = {
  &s_a2132fbe71f4a474,
  &s_d33bbbcf4b7a3763,
};
static const uint16_t m_ba201cdcc69487e6[] = {0, 1};
static const uint16_t i_ba201cdcc69487e6[] = {0, 1};
const ::capnp::_::RawSchema s_ba201cdcc69487e6 = {
  0xba201cdcc69487e6, b_ba201cdcc69487e6.words, 52, d_ba201cdcc69487e6, m_ba201cdcc69487e6,
  2, 2, i_ba201cdcc69487e6, nullptr, nullptr, { &s_ba201cdcc69487e6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// PoseWithCovarianceStamped
constexpr uint16_t PoseWithCovarianceStamped::_capnpPrivate::dataWordSize;
constexpr uint16_t PoseWithCovarianceStamped::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind PoseWithCovarianceStamped::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PoseWithCovarianceStamped::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

