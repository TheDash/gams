// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Byte.capn

#include "Byte.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<31> b_c9575b66d2145cfd = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    253,  92,  20, 210, 102,  91,  87, 201,
     10,   0,   0,   0,   1,   0,   1,   0,
     92,  87,   5, 153, 155,  81, 227, 191,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   0,   0,   0,
     25,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     66, 121, 116, 101,  46,  99,  97, 112,
    110,  58,  66, 121, 116, 101,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c9575b66d2145cfd = b_c9575b66d2145cfd.words;
#if !CAPNP_LITE
static const uint16_t m_c9575b66d2145cfd[] = {0};
static const uint16_t i_c9575b66d2145cfd[] = {0};
const ::capnp::_::RawSchema s_c9575b66d2145cfd = {
  0xc9575b66d2145cfd, b_c9575b66d2145cfd.words, 31, nullptr, m_c9575b66d2145cfd,
  0, 1, i_c9575b66d2145cfd, nullptr, nullptr, { &s_c9575b66d2145cfd, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// Byte
constexpr uint16_t Byte::_capnpPrivate::dataWordSize;
constexpr uint16_t Byte::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Byte::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Byte::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

