// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: PointStamped.capn

#include "PointStamped.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<48> b_c5fa46cf8891bc0f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     15, 188, 145, 136, 207,  70, 250, 197,
     18,   0,   0,   0,   1,   0,   0,   0,
    176,  17, 214, 217,  42,  96,  65, 255,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80, 111, 105, 110, 116,  83, 116,  97,
    109, 112, 101, 100,  46,  99,  97, 112,
    110,  58,  80, 111, 105, 110, 116,  83,
    116,  97, 109, 112, 101, 100,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    116, 164, 244, 113, 190,  47,  19, 162,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 105, 110, 116,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    197, 154,  34,  18,  32,  63,  95, 252,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c5fa46cf8891bc0f = b_c5fa46cf8891bc0f.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c5fa46cf8891bc0f[] = {
  &s_a2132fbe71f4a474,
  &s_fc5f3f2012229ac5,
};
static const uint16_t m_c5fa46cf8891bc0f[] = {0, 1};
static const uint16_t i_c5fa46cf8891bc0f[] = {0, 1};
const ::capnp::_::RawSchema s_c5fa46cf8891bc0f = {
  0xc5fa46cf8891bc0f, b_c5fa46cf8891bc0f.words, 48, d_c5fa46cf8891bc0f, m_c5fa46cf8891bc0f,
  2, 2, i_c5fa46cf8891bc0f, nullptr, nullptr, { &s_c5fa46cf8891bc0f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// PointStamped
constexpr uint16_t PointStamped::_capnpPrivate::dataWordSize;
constexpr uint16_t PointStamped::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind PointStamped::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PointStamped::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

