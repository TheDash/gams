// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Twist.capn

#include "Twist.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<47> b_acefd465180e22d6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    214,  34,  14,  24, 101, 212, 239, 172,
     11,   0,   0,   0,   1,   0,   0,   0,
    229,  61,  87,  86, 199, 136,  57, 205,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84, 119, 105, 115, 116,  46,  99,  97,
    112, 110,  58,  84, 119, 105, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    108, 105, 110, 101,  97, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     75, 153,  28, 131, 204, 196,  93, 172,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 110, 103, 117, 108,  97, 114,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     75, 153,  28, 131, 204, 196,  93, 172,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_acefd465180e22d6 = b_acefd465180e22d6.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_acefd465180e22d6[] = {
  &s_ac5dc4cc831c994b,
};
static const uint16_t m_acefd465180e22d6[] = {1, 0};
static const uint16_t i_acefd465180e22d6[] = {0, 1};
const ::capnp::_::RawSchema s_acefd465180e22d6 = {
  0xacefd465180e22d6, b_acefd465180e22d6.words, 47, d_acefd465180e22d6, m_acefd465180e22d6,
  1, 2, i_acefd465180e22d6, nullptr, nullptr, { &s_acefd465180e22d6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// Twist
constexpr uint16_t Twist::_capnpPrivate::dataWordSize;
constexpr uint16_t Twist::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Twist::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Twist::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

