// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: JoyFeedbackArray.capn

#include "JoyFeedbackArray.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<38> b_f23dd7cae0bdb19a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    154, 177, 189, 224, 202, 215,  61, 242,
     22,   0,   0,   0,   1,   0,   0,   0,
    164,  38,  60,  55, 150,  75, 174, 205,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     74, 111, 121,  70, 101, 101, 100,  98,
     97,  99, 107,  65, 114, 114,  97, 121,
     46,  99,  97, 112, 110,  58,  74, 111,
    121,  70, 101, 101, 100,  98,  97,  99,
    107,  65, 114, 114,  97, 121,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
     97, 114, 114,  97, 121,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      1,  86, 151,  86, 249, 100, 238, 128,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f23dd7cae0bdb19a = b_f23dd7cae0bdb19a.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f23dd7cae0bdb19a[] = {
  &s_80ee64f956975601,
};
static const uint16_t m_f23dd7cae0bdb19a[] = {0};
static const uint16_t i_f23dd7cae0bdb19a[] = {0};
const ::capnp::_::RawSchema s_f23dd7cae0bdb19a = {
  0xf23dd7cae0bdb19a, b_f23dd7cae0bdb19a.words, 38, d_f23dd7cae0bdb19a, m_f23dd7cae0bdb19a,
  1, 1, i_f23dd7cae0bdb19a, nullptr, nullptr, { &s_f23dd7cae0bdb19a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// JoyFeedbackArray
constexpr uint16_t JoyFeedbackArray::_capnpPrivate::dataWordSize;
constexpr uint16_t JoyFeedbackArray::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind JoyFeedbackArray::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* JoyFeedbackArray::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

