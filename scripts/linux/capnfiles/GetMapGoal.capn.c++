// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: GetMapGoal.capn

#include "GetMapGoal.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<17> b_e101e3102e9e565a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     90,  86, 158,  46,  16, 227,   1, 225,
     16,   0,   0,   0,   1,   0,   0,   0,
    253, 107, 189, 112, 169, 100, 237, 161,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     71, 101, 116,  77,  97, 112,  71, 111,
     97, 108,  46,  99,  97, 112, 110,  58,
     71, 101, 116,  77,  97, 112,  71, 111,
     97, 108,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_e101e3102e9e565a = b_e101e3102e9e565a.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_e101e3102e9e565a = {
  0xe101e3102e9e565a, b_e101e3102e9e565a.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_e101e3102e9e565a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// GetMapGoal
constexpr uint16_t GetMapGoal::_capnpPrivate::dataWordSize;
constexpr uint16_t GetMapGoal::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetMapGoal::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetMapGoal::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

