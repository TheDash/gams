// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Vector3Stamped.capn

#include "Vector3Stamped.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<49> b_b2e650a4c959d3ad = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    173, 211,  89, 201, 164,  80, 230, 178,
     20,   0,   0,   0,   1,   0,   0,   0,
     49, 240, 171,  29, 148,  34, 167, 135,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     86, 101,  99, 116, 111, 114,  51,  83,
    116,  97, 109, 112, 101, 100,  46,  99,
     97, 112, 110,  58,  86, 101,  99, 116,
    111, 114,  51,  83, 116,  97, 109, 112,
    101, 100,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    116, 164, 244, 113, 190,  47,  19, 162,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 101,  99, 116, 111, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     75, 153,  28, 131, 204, 196,  93, 172,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b2e650a4c959d3ad = b_b2e650a4c959d3ad.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b2e650a4c959d3ad[] = {
  &s_a2132fbe71f4a474,
  &s_ac5dc4cc831c994b,
};
static const uint16_t m_b2e650a4c959d3ad[] = {0, 1};
static const uint16_t i_b2e650a4c959d3ad[] = {0, 1};
const ::capnp::_::RawSchema s_b2e650a4c959d3ad = {
  0xb2e650a4c959d3ad, b_b2e650a4c959d3ad.words, 49, d_b2e650a4c959d3ad, m_b2e650a4c959d3ad,
  2, 2, i_b2e650a4c959d3ad, nullptr, nullptr, { &s_b2e650a4c959d3ad, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// Vector3Stamped
constexpr uint16_t Vector3Stamped::_capnpPrivate::dataWordSize;
constexpr uint16_t Vector3Stamped::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Vector3Stamped::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Vector3Stamped::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

