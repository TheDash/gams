// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: PoseArray.capn

#include "PoseArray.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<52> b_b9433809de800df7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    247,  13, 128, 222,   9,  56,  67, 185,
     15,   0,   0,   0,   1,   0,   0,   0,
     80, 254,  61,  59,  50, 223, 226, 179,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80, 111, 115, 101,  65, 114, 114,  97,
    121,  46,  99,  97, 112, 110,  58,  80,
    111, 115, 101,  65, 114, 114,  97, 121,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    116, 164, 244, 113, 190,  47,  19, 162,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 115, 101, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     54, 190, 203, 219, 138, 109, 123, 136,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b9433809de800df7 = b_b9433809de800df7.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b9433809de800df7[] = {
  &s_887b6d8adbcbbe36,
  &s_a2132fbe71f4a474,
};
static const uint16_t m_b9433809de800df7[] = {0, 1};
static const uint16_t i_b9433809de800df7[] = {0, 1};
const ::capnp::_::RawSchema s_b9433809de800df7 = {
  0xb9433809de800df7, b_b9433809de800df7.words, 52, d_b9433809de800df7, m_b9433809de800df7,
  2, 2, i_b9433809de800df7, nullptr, nullptr, { &s_b9433809de800df7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// PoseArray
constexpr uint16_t PoseArray::_capnpPrivate::dataWordSize;
constexpr uint16_t PoseArray::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind PoseArray::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PoseArray::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

