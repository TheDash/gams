// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: TwistWithCovariance.capn

#include "TwistWithCovariance.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<55> b_a26bef4c85d2d697 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    151, 214, 210, 133,  76, 239, 107, 162,
     25,   0,   0,   0,   1,   0,   0,   0,
    106, 214, 198, 140,  85, 145,  17, 136,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84, 119, 105, 115, 116,  87, 105, 116,
    104,  67, 111, 118,  97, 114, 105,  97,
    110,  99, 101,  46,  99,  97, 112, 110,
     58,  84, 119, 105, 115, 116,  87, 105,
    116, 104,  67, 111, 118,  97, 114, 105,
     97, 110,  99, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
    116, 119, 105, 115, 116,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    214,  34,  14,  24, 101, 212, 239, 172,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 118,  97, 114, 105,  97, 110,
     99, 101,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a26bef4c85d2d697 = b_a26bef4c85d2d697.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a26bef4c85d2d697[] = {
  &s_acefd465180e22d6,
};
static const uint16_t m_a26bef4c85d2d697[] = {1, 0};
static const uint16_t i_a26bef4c85d2d697[] = {0, 1};
const ::capnp::_::RawSchema s_a26bef4c85d2d697 = {
  0xa26bef4c85d2d697, b_a26bef4c85d2d697.words, 55, d_a26bef4c85d2d697, m_a26bef4c85d2d697,
  1, 2, i_a26bef4c85d2d697, nullptr, nullptr, { &s_a26bef4c85d2d697, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// TwistWithCovariance
constexpr uint16_t TwistWithCovariance::_capnpPrivate::dataWordSize;
constexpr uint16_t TwistWithCovariance::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TwistWithCovariance::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TwistWithCovariance::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

