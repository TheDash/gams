// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: MultiArrayDimension.capn

#include "MultiArrayDimension.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<65> b_a476942c58c9c9b3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    179, 201, 201,  88,  44, 148, 118, 164,
     25,   0,   0,   0,   1,   0,   1,   0,
     43, 160,  25, 240, 161,   2, 140, 197,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77, 117, 108, 116, 105,  65, 114, 114,
     97, 121,  68, 105, 109, 101, 110, 115,
    105, 111, 110,  46,  99,  97, 112, 110,
     58,  77, 117, 108, 116, 105,  65, 114,
    114,  97, 121,  68, 105, 109, 101, 110,
    115, 105, 111, 110,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    115, 116, 114, 105, 100, 101,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 122, 101,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97,  98, 101, 108,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a476942c58c9c9b3 = b_a476942c58c9c9b3.words;
#if !CAPNP_LITE
static const uint16_t m_a476942c58c9c9b3[] = {2, 1, 0};
static const uint16_t i_a476942c58c9c9b3[] = {0, 1, 2};
const ::capnp::_::RawSchema s_a476942c58c9c9b3 = {
  0xa476942c58c9c9b3, b_a476942c58c9c9b3.words, 65, nullptr, m_a476942c58c9c9b3,
  0, 3, i_a476942c58c9c9b3, nullptr, nullptr, { &s_a476942c58c9c9b3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// MultiArrayDimension
constexpr uint16_t MultiArrayDimension::_capnpPrivate::dataWordSize;
constexpr uint16_t MultiArrayDimension::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind MultiArrayDimension::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MultiArrayDimension::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

