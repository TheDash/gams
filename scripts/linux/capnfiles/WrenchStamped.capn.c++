// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: WrenchStamped.capn

#include "WrenchStamped.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<49> b_816f0499d53da5aa = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    170, 165,  61, 213, 153,   4, 111, 129,
     19,   0,   0,   0,   1,   0,   0,   0,
    181, 155, 154, 241, 157,  86, 217, 154,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     87, 114, 101, 110,  99, 104,  83, 116,
     97, 109, 112, 101, 100,  46,  99,  97,
    112, 110,  58,  87, 114, 101, 110,  99,
    104,  83, 116,  97, 109, 112, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    116, 164, 244, 113, 190,  47,  19, 162,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119, 114, 101, 110,  99, 104,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    181, 231, 188,  11, 223,   5, 210, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_816f0499d53da5aa = b_816f0499d53da5aa.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_816f0499d53da5aa[] = {
  &s_a2132fbe71f4a474,
  &s_c4d205df0bbce7b5,
};
static const uint16_t m_816f0499d53da5aa[] = {0, 1};
static const uint16_t i_816f0499d53da5aa[] = {0, 1};
const ::capnp::_::RawSchema s_816f0499d53da5aa = {
  0x816f0499d53da5aa, b_816f0499d53da5aa.words, 49, d_816f0499d53da5aa, m_816f0499d53da5aa,
  2, 2, i_816f0499d53da5aa, nullptr, nullptr, { &s_816f0499d53da5aa, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// WrenchStamped
constexpr uint16_t WrenchStamped::_capnpPrivate::dataWordSize;
constexpr uint16_t WrenchStamped::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WrenchStamped::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WrenchStamped::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

