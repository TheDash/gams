// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Float32.capn

#include "Float32.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<32> b_e7fb0deceeb743db = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    219,  67, 183, 238, 236,  13, 251, 231,
     13,   0,   0,   0,   1,   0,   0,   0,
     32, 117,  39, 156,  86, 240, 162, 150,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     70, 108, 111,  97, 116,  51,  50,  46,
     99,  97, 112, 110,  58,  70, 108, 111,
     97, 116,  51,  50,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    219,  67, 183, 238, 236,  13, 251, 231,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e7fb0deceeb743db = b_e7fb0deceeb743db.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e7fb0deceeb743db[] = {
  &s_e7fb0deceeb743db,
};
static const uint16_t m_e7fb0deceeb743db[] = {0};
static const uint16_t i_e7fb0deceeb743db[] = {0};
const ::capnp::_::RawSchema s_e7fb0deceeb743db = {
  0xe7fb0deceeb743db, b_e7fb0deceeb743db.words, 32, d_e7fb0deceeb743db, m_e7fb0deceeb743db,
  1, 1, i_e7fb0deceeb743db, nullptr, nullptr, { &s_e7fb0deceeb743db, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// Float32
constexpr uint16_t Float32::_capnpPrivate::dataWordSize;
constexpr uint16_t Float32::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Float32::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Float32::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

