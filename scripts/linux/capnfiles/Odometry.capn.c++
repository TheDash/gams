// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Odometry.capn

#include "Odometry.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<78> b_fcc1d3c3a271db2d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     45, 219, 113, 162, 195, 211, 193, 252,
     14,   0,   0,   0,   1,   0,   0,   0,
    236,  86, 161,  48, 145, 129, 137, 146,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     79, 100, 111, 109, 101, 116, 114, 121,
     46,  99,  97, 112, 110,  58,  79, 100,
    111, 109, 101, 116, 114, 121,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
    116, 119, 105, 115, 116,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    151, 214, 210, 133,  76, 239, 107, 162,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    116, 164, 244, 113, 190,  47,  19, 162,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 115, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     99,  55, 122,  75, 207, 187,  59, 211,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104, 105, 108, 100,  70, 114,  97,
    109, 101,  73, 100,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fcc1d3c3a271db2d = b_fcc1d3c3a271db2d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_fcc1d3c3a271db2d[] = {
  &s_a2132fbe71f4a474,
  &s_a26bef4c85d2d697,
  &s_d33bbbcf4b7a3763,
};
static const uint16_t m_fcc1d3c3a271db2d[] = {3, 1, 2, 0};
static const uint16_t i_fcc1d3c3a271db2d[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_fcc1d3c3a271db2d = {
  0xfcc1d3c3a271db2d, b_fcc1d3c3a271db2d.words, 78, d_fcc1d3c3a271db2d, m_fcc1d3c3a271db2d,
  3, 4, i_fcc1d3c3a271db2d, nullptr, nullptr, { &s_fcc1d3c3a271db2d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// Odometry
constexpr uint16_t Odometry::_capnpPrivate::dataWordSize;
constexpr uint16_t Odometry::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Odometry::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Odometry::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

