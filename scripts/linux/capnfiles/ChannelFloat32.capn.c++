// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: ChannelFloat32.capn

#include "ChannelFloat32.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<53> b_c17e0893b8849c2b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     43, 156, 132, 184, 147,   8, 126, 193,
     20,   0,   0,   0,   1,   0,   0,   0,
     61, 131, 188,  60,   2, 217, 165, 162,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     67, 104,  97, 110, 110, 101, 108,  70,
    108, 111,  97, 116,  51,  50,  46,  99,
     97, 112, 110,  58,  67, 104,  97, 110,
    110, 101, 108,  70, 108, 111,  97, 116,
     51,  50,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    118,  97, 108, 117, 101, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c17e0893b8849c2b = b_c17e0893b8849c2b.words;
#if !CAPNP_LITE
static const uint16_t m_c17e0893b8849c2b[] = {1, 0};
static const uint16_t i_c17e0893b8849c2b[] = {0, 1};
const ::capnp::_::RawSchema s_c17e0893b8849c2b = {
  0xc17e0893b8849c2b, b_c17e0893b8849c2b.words, 53, nullptr, m_c17e0893b8849c2b,
  0, 2, i_c17e0893b8849c2b, nullptr, nullptr, { &s_c17e0893b8849c2b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// ChannelFloat32
constexpr uint16_t ChannelFloat32::_capnpPrivate::dataWordSize;
constexpr uint16_t ChannelFloat32::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ChannelFloat32::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ChannelFloat32::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

