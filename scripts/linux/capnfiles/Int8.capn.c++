// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Int8.capn

#include "Int8.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<31> b_a860725a1a8a3b1e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     30,  59, 138,  26,  90, 114,  96, 168,
     10,   0,   0,   0,   1,   0,   0,   0,
    218,  74, 189,  45,  43, 231, 123, 236,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   0,   0,   0,
     25,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73, 110, 116,  56,  46,  99,  97, 112,
    110,  58,  73, 110, 116,  56,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     30,  59, 138,  26,  90, 114,  96, 168,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a860725a1a8a3b1e = b_a860725a1a8a3b1e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a860725a1a8a3b1e[] = {
  &s_a860725a1a8a3b1e,
};
static const uint16_t m_a860725a1a8a3b1e[] = {0};
static const uint16_t i_a860725a1a8a3b1e[] = {0};
const ::capnp::_::RawSchema s_a860725a1a8a3b1e = {
  0xa860725a1a8a3b1e, b_a860725a1a8a3b1e.words, 31, d_a860725a1a8a3b1e, m_a860725a1a8a3b1e,
  1, 1, i_a860725a1a8a3b1e, nullptr, nullptr, { &s_a860725a1a8a3b1e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// Int8
constexpr uint16_t Int8::_capnpPrivate::dataWordSize;
constexpr uint16_t Int8::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Int8::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Int8::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

