// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: AccelWithCovariance.capn

#include "AccelWithCovariance.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<55> b_d0a5b46b930a739b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    155, 115,  10, 147, 107, 180, 165, 208,
     25,   0,   0,   0,   1,   0,   0,   0,
    164, 177,   3, 179,   5, 165,  60, 173,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,  99,  99, 101, 108,  87, 105, 116,
    104,  67, 111, 118,  97, 114, 105,  97,
    110,  99, 101,  46,  99,  97, 112, 110,
     58,  65,  99,  99, 101, 108,  87, 105,
    116, 104,  67, 111, 118,  97, 114, 105,
     97, 110,  99, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
     97,  99,  99, 101, 108,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    132, 120,  12, 148, 193, 172,  22, 228,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 118,  97, 114, 105,  97, 110,
     99, 101,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d0a5b46b930a739b = b_d0a5b46b930a739b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d0a5b46b930a739b[] = {
  &s_e416acc1940c7884,
};
static const uint16_t m_d0a5b46b930a739b[] = {0, 1};
static const uint16_t i_d0a5b46b930a739b[] = {0, 1};
const ::capnp::_::RawSchema s_d0a5b46b930a739b = {
  0xd0a5b46b930a739b, b_d0a5b46b930a739b.words, 55, d_d0a5b46b930a739b, m_d0a5b46b930a739b,
  1, 2, i_d0a5b46b930a739b, nullptr, nullptr, { &s_d0a5b46b930a739b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// AccelWithCovariance
constexpr uint16_t AccelWithCovariance::_capnpPrivate::dataWordSize;
constexpr uint16_t AccelWithCovariance::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind AccelWithCovariance::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* AccelWithCovariance::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

