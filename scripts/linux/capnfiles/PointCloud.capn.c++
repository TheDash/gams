// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: PointCloud.capn

#include "PointCloud.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<72> b_b77e1e7a8d36dff0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    240, 223,  54, 141, 122,  30, 126, 183,
     16,   0,   0,   0,   1,   0,   0,   0,
     40, 147,  30,  69,  53,  75,  57, 218,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80, 111, 105, 110, 116,  67, 108, 111,
    117, 100,  46,  99,  97, 112, 110,  58,
     80, 111, 105, 110, 116,  67, 108, 111,
    117, 100,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
     99, 104,  97, 110, 110, 101, 108, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     43, 156, 132, 184, 147,   8, 126, 193,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    116, 164, 244, 113, 190,  47,  19, 162,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 105, 110, 116, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    199, 251,  53,   9,  23, 234, 252, 159,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b77e1e7a8d36dff0 = b_b77e1e7a8d36dff0.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b77e1e7a8d36dff0[] = {
  &s_9ffcea170935fbc7,
  &s_a2132fbe71f4a474,
  &s_c17e0893b8849c2b,
};
static const uint16_t m_b77e1e7a8d36dff0[] = {0, 1, 2};
static const uint16_t i_b77e1e7a8d36dff0[] = {0, 1, 2};
const ::capnp::_::RawSchema s_b77e1e7a8d36dff0 = {
  0xb77e1e7a8d36dff0, b_b77e1e7a8d36dff0.words, 72, d_b77e1e7a8d36dff0, m_b77e1e7a8d36dff0,
  3, 3, i_b77e1e7a8d36dff0, nullptr, nullptr, { &s_b77e1e7a8d36dff0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// PointCloud
constexpr uint16_t PointCloud::_capnpPrivate::dataWordSize;
constexpr uint16_t PointCloud::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind PointCloud::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PointCloud::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

