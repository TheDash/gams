// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Int8MultiArray.capn

#include "Int8MultiArray.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<53> b_871479d05868220f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     15,  34, 104,  88, 208, 121,  20, 135,
     20,   0,   0,   0,   1,   0,   0,   0,
    225, 117, 136,  95, 122, 191, 218, 153,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73, 110, 116,  56,  77, 117, 108, 116,
    105,  65, 114, 114,  97, 121,  46,  99,
     97, 112, 110,  58,  73, 110, 116,  56,
     77, 117, 108, 116, 105,  65, 114, 114,
     97, 121,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 121, 111, 117, 116,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    234,  33, 254, 243, 231,  46, 152, 218,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_871479d05868220f = b_871479d05868220f.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_871479d05868220f[] = {
  &s_da982ee7f3fe21ea,
};
static const uint16_t m_871479d05868220f[] = {0, 1};
static const uint16_t i_871479d05868220f[] = {0, 1};
const ::capnp::_::RawSchema s_871479d05868220f = {
  0x871479d05868220f, b_871479d05868220f.words, 53, d_871479d05868220f, m_871479d05868220f,
  1, 2, i_871479d05868220f, nullptr, nullptr, { &s_871479d05868220f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// Int8MultiArray
constexpr uint16_t Int8MultiArray::_capnpPrivate::dataWordSize;
constexpr uint16_t Int8MultiArray::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Int8MultiArray::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Int8MultiArray::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

