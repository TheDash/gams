// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Duration.capn

#include "Duration.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<32> b_aeb876815ca18c26 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     38, 140, 161,  92, 129, 118, 184, 174,
     14,   0,   0,   0,   1,   0,   1,   0,
     44, 236,  38, 146,  79,  21,  70, 208,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68, 117, 114,  97, 116, 105, 111, 110,
     46,  99,  97, 112, 110,  58,  68, 117,
    114,  97, 116, 105, 111, 110,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_aeb876815ca18c26 = b_aeb876815ca18c26.words;
#if !CAPNP_LITE
static const uint16_t m_aeb876815ca18c26[] = {0};
static const uint16_t i_aeb876815ca18c26[] = {0};
const ::capnp::_::RawSchema s_aeb876815ca18c26 = {
  0xaeb876815ca18c26, b_aeb876815ca18c26.words, 32, nullptr, m_aeb876815ca18c26,
  0, 1, i_aeb876815ca18c26, nullptr, nullptr, { &s_aeb876815ca18c26, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace gams {
namespace types {

// Duration
constexpr uint16_t Duration::_capnpPrivate::dataWordSize;
constexpr uint16_t Duration::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Duration::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Duration::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

