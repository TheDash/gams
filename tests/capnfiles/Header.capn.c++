// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Header.capn

#include "Header.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<55> b_9ec8f84737700219 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     25,   2, 112,  55,  71, 248, 200, 158,
     12,   0,   0,   0,   1,   0,   2,   0,
    181, 122, 182,  46, 101, 104, 243, 146,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72, 101,  97, 100, 101, 114,  46,  99,
     97, 112, 110,  58,  72, 101,  97, 100,
    101, 114,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    177,  53,  12, 153, 101, 224, 187, 211,
     77,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 113,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 114,  97, 109, 101, 105, 100,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 109, 112,   0,   0,   0, }
};
::capnp::word const* const bp_9ec8f84737700219 = b_9ec8f84737700219.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9ec8f84737700219[] = {
  &s_d3bbe065990c35b1,
};
static const uint16_t m_9ec8f84737700219[] = {1, 0, 2};
static const uint16_t i_9ec8f84737700219[] = {0, 1, 2};
const ::capnp::_::RawSchema s_9ec8f84737700219 = {
  0x9ec8f84737700219, b_9ec8f84737700219.words, 55, d_9ec8f84737700219, m_9ec8f84737700219,
  1, 3, i_9ec8f84737700219, nullptr, nullptr, { &s_9ec8f84737700219, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_d3bbe065990c35b1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    177,  53,  12, 153, 101, 224, 187, 211,
     19,   0,   0,   0,   1,   0,   2,   0,
     25,   2, 112,  55,  71, 248, 200, 158,
      1,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72, 101,  97, 100, 101, 114,  46,  99,
     97, 112, 110,  58,  72, 101,  97, 100,
    101, 114,  46, 115, 116,  97, 109, 112,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    115, 101,  99,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 115, 101,  99,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d3bbe065990c35b1 = b_d3bbe065990c35b1.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d3bbe065990c35b1[] = {
  &s_9ec8f84737700219,
};
static const uint16_t m_d3bbe065990c35b1[] = {1, 0};
static const uint16_t i_d3bbe065990c35b1[] = {0, 1};
const ::capnp::_::RawSchema s_d3bbe065990c35b1 = {
  0xd3bbe065990c35b1, b_d3bbe065990c35b1.words, 47, d_d3bbe065990c35b1, m_d3bbe065990c35b1,
  1, 2, i_d3bbe065990c35b1, nullptr, nullptr, { &s_d3bbe065990c35b1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Header
constexpr uint16_t Header::_capnpPrivate::dataWordSize;
constexpr uint16_t Header::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Header::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Header::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Header::Stamp
constexpr uint16_t Header::Stamp::_capnpPrivate::dataWordSize;
constexpr uint16_t Header::Stamp::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Header::Stamp::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Header::Stamp::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



