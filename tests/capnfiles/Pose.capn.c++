// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Pose.capn

#include "Pose.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<48> b_e7d9add5e94df07f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    127, 240,  77, 233, 213, 173, 217, 231,
     10,   0,   0,   0,   1,   0,   0,   0,
     21,  80,  24,  45,  87, 193, 178, 192,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   0,   0,   0,
     25,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80, 111, 115, 101,  46,  99,  97, 112,
    110,  58,  80, 111, 115, 101,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    112, 111, 115, 105, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     81,  83, 102, 240, 130, 111,  58, 149,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113, 117,  97, 116, 101, 114, 110, 105,
    111, 110,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      2, 213, 219,  48, 191,  67, 197, 145,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e7d9add5e94df07f = b_e7d9add5e94df07f.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e7d9add5e94df07f[] = {
  &s_91c543bf30dbd502,
  &s_953a6f82f0665351,
};
static const uint16_t m_e7d9add5e94df07f[] = {0, 1};
static const uint16_t i_e7d9add5e94df07f[] = {0, 1};
const ::capnp::_::RawSchema s_e7d9add5e94df07f = {
  0xe7d9add5e94df07f, b_e7d9add5e94df07f.words, 48, d_e7d9add5e94df07f, m_e7d9add5e94df07f,
  2, 2, i_e7d9add5e94df07f, nullptr, nullptr, { &s_e7d9add5e94df07f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Pose
constexpr uint16_t Pose::_capnpPrivate::dataWordSize;
constexpr uint16_t Pose::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Pose::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Pose::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



