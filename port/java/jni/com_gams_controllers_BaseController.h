/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include "gams/GamsExport.h"
/* Header for class com_gams_controllers_BaseController */

#ifndef _Included_com_gams_controllers_BaseController
#define _Included_com_gams_controllers_BaseController
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_gams_controllers_BaseController
 * Method:    jni_BaseControllerFromKb
 * Signature: (J)J
 */
GAMS_EXPORT jlong JNICALL Java_com_gams_controllers_BaseController_jni_1BaseControllerFromKb
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_gams_controllers_BaseController
 * Method:    jni_BaseController
 * Signature: (J)J
 */
GAMS_EXPORT jlong JNICALL Java_com_gams_controllers_BaseController_jni_1BaseController
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_gams_controllers_BaseController
 * Method:    jni_freeBaseController
 * Signature: (J)V
 */
GAMS_EXPORT void JNICALL Java_com_gams_controllers_BaseController_jni_1freeBaseController
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_gams_controllers_BaseController
 * Method:    jni_toString
 * Signature: (J)Ljava/lang/String;
 */
GAMS_EXPORT jstring JNICALL Java_com_gams_controllers_BaseController_jni_1toString
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_gams_controllers_BaseController
 * Method:    jni_analyze
 * Signature: (J)J
 */
GAMS_EXPORT jlong JNICALL Java_com_gams_controllers_BaseController_jni_1analyze
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_gams_controllers_BaseController
 * Method:    jni_execute
 * Signature: (J)J
 */
GAMS_EXPORT jlong JNICALL Java_com_gams_controllers_BaseController_jni_1execute
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_gams_controllers_BaseController
 * Method:    jni_getPlatform
 * Signature: (J)J
 */
GAMS_EXPORT jlong JNICALL Java_com_gams_controllers_BaseController_jni_1getPlatform
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_gams_controllers_BaseController
 * Method:    jni_getAlgorithm
 * Signature: (J)J
 */
GAMS_EXPORT jlong JNICALL Java_com_gams_controllers_BaseController_jni_1getAlgorithm
  (JNIEnv *, jobject, jlong);

/*
* Class:     com_gams_controllers_BaseController
* Method:    jni_addAlgorithmFactory
* Signature: (JLjava/lang/String;Ljava/lang/Object;)V
*/
GAMS_EXPORT void JNICALL Java_com_gams_controllers_BaseController_jni_1addAlgorithmFactory
(JNIEnv *, jobject, jlong, jstring, jobject);

/*
 * Class:     com_gams_controllers_BaseController
 * Method:    jni_initAccent
 * Signature: (JLjava/lang/String;[J)V
 */
GAMS_EXPORT void JNICALL Java_com_gams_controllers_BaseController_jni_1initAccent
  (JNIEnv *, jobject, jlong, jstring, jlongArray);

/*
 * Class:     com_gams_controllers_BaseController
 * Method:    jni_initAlgorithm
 * Signature: (JLjava/lang/String;[J)V
 */
GAMS_EXPORT void JNICALL Java_com_gams_controllers_BaseController_jni_1initAlgorithm__JLjava_lang_String_2_3J
  (JNIEnv *, jobject, jlong, jstring, jlongArray);

/*
 * Class:     com_gams_controllers_BaseController
 * Method:    jni_initPlatform
 * Signature: (JLjava/lang/String;)V
 */
GAMS_EXPORT void JNICALL Java_com_gams_controllers_BaseController_jni_1initPlatform__JLjava_lang_String_2
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     com_gams_controllers_BaseController
 * Method:    jni_initPlatform
 * Signature: (JLjava/lang/String;[J)V
 */
GAMS_EXPORT void JNICALL Java_com_gams_controllers_BaseController_jni_1initPlatform__JLjava_lang_String_2_3J
  (JNIEnv *, jobject, jlong, jstring, jlongArray);

/*
 * Class:     com_gams_controllers_BaseController
 * Method:    jni_initAlgorithm
 * Signature: (JLjava/lang/Object;)V
 */
GAMS_EXPORT void JNICALL Java_com_gams_controllers_BaseController_jni_1initAlgorithm__JLjava_lang_Object_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     com_gams_controllers_BaseController
 * Method:    jni_initPlatform
 * Signature: (JLjava/lang/Object;)V
 */
GAMS_EXPORT void JNICALL Java_com_gams_controllers_BaseController_jni_1initPlatform__JLjava_lang_Object_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     com_gams_controllers_BaseController
 * Method:    jni_initVars
 * Signature: (JJJ)V
 */
GAMS_EXPORT void JNICALL Java_com_gams_controllers_BaseController_jni_1initVars
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     com_gams_controllers_BaseController
 * Method:    jni_initVarsAlgorithm
 * Signature: (JJ)V
 */
GAMS_EXPORT void JNICALL Java_com_gams_controllers_BaseController_jni_1initVarsAlgorithm
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     com_gams_controllers_BaseController
 * Method:    jni_initVarsPlatform
 * Signature: (JJ)V
 */
GAMS_EXPORT void JNICALL Java_com_gams_controllers_BaseController_jni_1initVarsPlatform
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     com_gams_controllers_BaseController
 * Method:    jni_monitor
 * Signature: (J)J
 */
GAMS_EXPORT jlong JNICALL Java_com_gams_controllers_BaseController_jni_1monitor
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_gams_controllers_BaseController
 * Method:    jni_plan
 * Signature: (J)J
 */
GAMS_EXPORT jlong JNICALL Java_com_gams_controllers_BaseController_jni_1plan
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_gams_controllers_BaseController
 * Method:    jni_run
 * Signature: (JDD)J
 */
GAMS_EXPORT jlong JNICALL Java_com_gams_controllers_BaseController_jni_1run__JDD
  (JNIEnv *, jobject, jlong, jdouble, jdouble);

/*
 * Class:     com_gams_controllers_BaseController
 * Method:    jni_run
 * Signature: (JDDD)J
 */
GAMS_EXPORT jlong JNICALL Java_com_gams_controllers_BaseController_jni_1run__JDDD
  (JNIEnv *, jobject, jlong, jdouble, jdouble, jdouble);

/*
 * Class:     com_gams_controllers_BaseController
 * Method:    jni_runHz
 * Signature: (JDDD)J
 */
GAMS_EXPORT jlong JNICALL Java_com_gams_controllers_BaseController_jni_1runHz
  (JNIEnv *, jobject, jlong, jdouble, jdouble, jdouble);

/*
 * Class:     com_gams_controllers_BaseController
 * Method:    jni_systemAnalyze
 * Signature: (J)J
 */
GAMS_EXPORT jlong JNICALL Java_com_gams_controllers_BaseController_jni_1systemAnalyze
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
